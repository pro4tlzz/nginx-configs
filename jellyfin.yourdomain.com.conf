# https://jellyfin.org/docs/general/networking/nginx.html
# Port 80 block, redirects http www and non www. to https
server {
    listen 80;
    server_name www.jellyfin.yourdomain.com jellyfin.yourdomain.com;
    # Logging & Action
    return 301 https://www.jellyfin.yourdomain.com$request_uri;
    access_log /var/log/nginx/jellyfin.yourdomain.com.log;
}

# Port 443 ssl block, redirects non www to https www
server {
    listen 443 ssl;
    server_name jellyfin.yourdomain.com;
    # SSL Settings
    ssl_certificate /etc/letsencrypt/live/www.jellyfin.yourdomain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.jellyfin.yourdomain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/www.jellyfin.yourdomain.com/fullchain.pem;
    resolver 1.1.1.1 1.0.0.1;
    # Security Headers
	add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    # Logging & Action
    return 301 https://www.jellyfin.yourdomain.com$request_uri;
    access_log /var/log/nginx/jellyfin.yourdomain.com.log;
}

# Port 443 ssl block, handles actual requests
server {
    listen 443 ssl; # managed by Certbot
    server_name www.jellyfin.yourdomain.com;
    set $jellyfin 127.0.0.1;
    # SSL Settings
    ssl_certificate /etc/letsencrypt/live/www.jellyfin.yourdomain.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.jellyfin.yourdomain.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/www.jellyfin.yourdomain.com/fullchain.pem;
    resolver 1.1.1.1 1.0.0.1;
    # Security Headers
	add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin" always;
    add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;
    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;
    access_log /var/log/nginx/jellyfin.yourdomain.com.log;
    # Proxy Pass
    location = / {
        return 302 https://$host/web/;
    }
    # Proxy Pass
    location / {
        # Proxy main Jellyfin traffic
        proxy_pass http://$jellyfin:8096;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }
    # Proxy Pass
    location = /web/ {
        # Proxy main Jellyfin traffic
        proxy_pass http://$jellyfin/web/index.html;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }
    # Proxy Pass
    location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass http://$jellyfin:8096;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }